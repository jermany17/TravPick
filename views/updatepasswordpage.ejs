<%- include("include/_header") %>

<!-- Google Material Symbols 아이콘 불러오기 -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

<div class="updatepassword-container-container">
    <div class="updatepassword-container">
        <span class="material-symbols-outlined updatepassword-profile-icon">account_circle</span>

        <div class="updatepassword-box">
            <!-- 현재 비밀번호 입력 및 확인 -->
            <div class="updatepassword-input-group">
                <input type="password" id="updatepasswordCurrent" class="updatepassword-input" placeholder="현재 비밀번호">
                <button class="updatepassword-check-button" onclick="checkCurrentPassword()">일치 확인</button>
            </div>
            <p id="updatepasswordCurrentMessage" class="updatepassword-error-message"></p>

            <!-- 변경할 비밀번호 입력 -->
            <input type="password" id="updatepasswordNew" class="updatepassword-input" placeholder="변경할 비밀번호" disabled>

            <!-- 변경할 비밀번호 확인 및 일치 체크 -->
            <div class="updatepassword-input-group">
                <input type="password" id="updatepasswordConfirmNew" class="updatepassword-input" placeholder="변경할 비밀번호 확인" disabled>
                <button class="updatepassword-check-button" id="updatepasswordCheckNewButton" onclick="checkNewPasswordMatch()" disabled>일치 확인</button>
            </div>
            <p id="updatepasswordNewMessage" class="updatepassword-error-message"></p>

            <!-- 비밀번호 변경 버튼 -->
            <button class="updatepassword-submit-button" onclick="updatePassword()" disabled>비밀번호 변경</button>
        </div>
    </div>
</div>

<%- include("include/_footer") %>

<script>
    let isCurrentPasswordValid = false;
    let isNewPasswordValid = false;

    // 현재 비밀번호 확인 API 호출
    async function checkCurrentPassword() {
        const currentPassword = document.getElementById("updatepasswordCurrent").value;
        const currentPasswordMessage = document.getElementById("updatepasswordCurrentMessage");
        const newPasswordInput = document.getElementById("updatepasswordNew");
        const confirmNewPasswordInput = document.getElementById("updatepasswordConfirmNew");
        const checkNewPasswordButton = document.getElementById("updatepasswordCheckNewButton");

        if (!currentPassword) {
            currentPasswordMessage.innerText = "현재 비밀번호를 입력해주세요.";
            currentPasswordMessage.style.color = "red";
            currentPasswordMessage.style.display = "block";
            isCurrentPasswordValid = false;
            updateSubmitButton();
            return;
        }

        try {
            const response = await fetch("/check-password", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ currentPassword })
            });

            const result = await response.json();

            if (!response.ok) {
                currentPasswordMessage.innerText = result.message;
                currentPasswordMessage.style.color = "red";
                isCurrentPasswordValid = false;

                // 비밀번호 변경 입력 비활성화
                newPasswordInput.disabled = true;
                confirmNewPasswordInput.disabled = true;
                checkNewPasswordButton.disabled = true;
            } else {
                currentPasswordMessage.innerText = result.message;
                currentPasswordMessage.style.color = "green";
                isCurrentPasswordValid = true;

                // 현재 비밀번호가 확인되면 새로운 비밀번호 입력 활성화
                newPasswordInput.disabled = false;
                confirmNewPasswordInput.disabled = false;
                checkNewPasswordButton.disabled = false;
            }

            currentPasswordMessage.style.display = "block";
        } catch (error) {
            console.error("비밀번호 확인 실패:", error);
        }

        updateSubmitButton();
    }

    // 새 비밀번호 일치 확인
    function checkNewPasswordMatch() {
        const newPassword = document.getElementById("updatepasswordNew").value;
        const confirmNewPassword = document.getElementById("updatepasswordConfirmNew").value;
        const newPasswordMessage = document.getElementById("updatepasswordNewMessage");

        if (!newPassword || !confirmNewPassword) {
            newPasswordMessage.innerText = "비밀번호를 입력해주세요.";
            newPasswordMessage.style.color = "red";
            isNewPasswordValid = false;
        } else if (newPassword !== confirmNewPassword) {
            newPasswordMessage.innerText = "비밀번호가 일치하지 않습니다.";
            newPasswordMessage.style.color = "red";
            isNewPasswordValid = false;
        } else if (newPassword === document.getElementById("updatepasswordCurrent").value) {
            newPasswordMessage.innerText = "이전 비밀번호와 동일한 비밀번호로 변경할 수 없습니다.";
            newPasswordMessage.style.color = "red";
            isNewPasswordValid = false;
        } else {
            newPasswordMessage.innerText = "비밀번호가 일치합니다.";
            newPasswordMessage.style.color = "green";
            isNewPasswordValid = true;
        }

        newPasswordMessage.style.display = "block";
        updateSubmitButton();
    }

    // 비밀번호 변경 API 호출
    async function updatePassword() {
        const currentPassword = document.getElementById("updatepasswordCurrent").value;
        const newPassword = document.getElementById("updatepasswordNew").value;

        try {
            const response = await fetch("/update-password", {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ currentPassword, newPassword })
            });

            const result = await response.json();

            if (response.ok) {
                alert(result.message); // "비밀번호가 성공적으로 변경되었습니다."
                window.location.href = "/mypage";
            } else {
                alert(result.message);
            }
        } catch (error) {
            alert("비밀번호 변경 중 오류가 발생했습니다.");
        }
    }

    // 비밀번호 변경 버튼 활성화 업데이트
    function updateSubmitButton() {
        const submitButton = document.querySelector(".updatepassword-submit-button");
        submitButton.disabled = !(isCurrentPasswordValid && isNewPasswordValid);
    }
</script>
