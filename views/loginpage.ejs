<%- include("include/_header") %>

<!-- Google Material Symbols 아이콘 불러오기 -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

<div class="login-container">
    <div class="login-box">
        <!-- Google Material Symbols 사용자 아이콘 -->
        <span class="material-symbols-outlined">account_circle</span>

        <!-- 아이디 입력 -->
        <input type="text" id="userId" class="login-input" placeholder="아이디를 입력해주세요" onfocus="this.placeholder=''" onblur="this.placeholder='아이디를 입력해주세요'">

        <!-- 비밀번호 입력 -->
        <input type="password" id="userPassword" class="login-input" placeholder="비밀번호를 입력해주세요" onfocus="this.placeholder=''" onblur="this.placeholder='비밀번호를 입력해주세요'">

        <!-- 로그인 실패 메시지 -->
        <p id="errorMessage" class="error-message"></p>

        <!-- 로그인 버튼 -->
        <button class="login-button" onclick="login()">로그인</button>

        <!-- 회원가입 버튼 -->
        <button class="signup-button" onclick="location.href='/signuppage'">회원가입</button>
    </div>
</div>

<script>
    // 로그인 페이지에 진입하기 전 경로를 저장
    document.addEventListener("DOMContentLoaded", () => {
        const previousPage = document.referrer; // 이전 페이지 가져오기
        if (previousPage && !previousPage.includes("/loginpage")) {
            sessionStorage.setItem("previousPage", previousPage);
        }
    });

    async function login() {
        const userId = document.getElementById("userId").value;
        const userPassword = document.getElementById("userPassword").value;
        const errorMessage = document.getElementById("errorMessage");
  
        // 기존 오류 메시지 초기화
        errorMessage.style.display = "none";
        errorMessage.innerText = "";

        if (!userId || !userPassword) {
            errorMessage.innerText = "아이디와 비밀번호를 입력해주세요.";
            errorMessage.style.display = "block";
            return;
        }
  
        try {
            const response = await fetch("/login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ userId, userPassword })
            });
  
            const result = await response.json();
  
            if (!response.ok) {
                // 실패한 경우, 백엔드에서 받은 메시지를 띄움
                errorMessage.innerText = result.message;
                errorMessage.style.display = "block";
            } else {
                // 로그인 성공 시 저장된 이전 페이지로 이동
                const previousPage = sessionStorage.getItem("previousPage");
                
                if (
                    previousPage && (previousPage.includes("/countrypage/") || previousPage.includes("/postpage/"))
                ) {
                    window.location.href = previousPage; // 원래 있던 페이지로 리다이렉트
                } else {
                    window.location.href = "/"; // 기본적으로 홈으로 리다이렉트
                }
            }
        } catch (error) {
            console.error("로그인 요청 실패:", error);
            errorMessage.innerText = "서버 오류가 발생했습니다. 다시 시도해주세요.";
            errorMessage.style.display = "block";
        }
    }

    // 페이지 로드 시 로그인 상태 확인
    async function checkLoginStatus() {
        try {
            const response = await fetch("/check-login");
            const result = await response.json();

            if (response.ok && result.isLoggedIn) {
                // 로그인된 경우, 홈 또는 마이페이지로 리다이렉트
                window.location.href = "/";
            }
        } catch (error) {
            console.error("로그인 상태 확인 실패:", error);
        }
    }

    checkLoginStatus();
</script>

<%- include("include/_footer") %>
